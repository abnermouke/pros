<?php
/**
 * Power by abnermouke/easy-builder.
 * User: Abnermouke <abnermouke@outlook.com>
 * Originate in Yunni Technology Co Ltd.
 * Date: 2022-07-22
 * Time: 23:06:16
*/

namespace App\Services\Pros\System;

use Abnermouke\EasyBuilder\Library\CodeLibrary;
use Abnermouke\EasyBuilder\Module\BaseService;
use App\Repository\Pros\System\AmapAreaRepository;

/**
 * 高德地图行政地区逻辑服务容器
 * Class AmapAreaService
 * @package App\Services\Pros\System
*/
class AmapAreaService extends BaseService
{

    /**
    * 引入父级构造
    * AmapAreaService constructor.
    * @param bool $pass 是否直接获取结果
    */
    public function __construct($pass = false) { parent::__construct($pass); }


    /**
     * 刷新json文件
     * @Author Abnermouke <abnermouke@outlook.com>
     * @Originate in Abnermouke's MBP
     * @Time __TIME__
     * @return array|bool
     * @throws \Exception
     */
    public function refreshJson()
    {
        //整理文件地址
        $json_path = public_path('static/jsons/tools/areas.json');
        //获取地址结构
        $areas = $this->getAreasTree();
        //设置json文件
        set_json_file_content($json_path, $areas);
        //返回访问链接
        return $this->success(['link' => proxy_assets('jsons/tools/areas.json', 'static')]);
    }

    /**
     * 获地址结构
     * @Author Abnermouke <abnermouke@outlook.com>
     * @Originate in Abnermouke's MBP
     * @Time __TIME__
     * @param $parent_id
     * @param $data
     * @return array|mixed
     * @throws \Exception
     */
    private function getAreasTree($parent_id = 100, $data = [])
    {
        //查询全部可用子集
        if ($sub_areas = (new AmapAreaRepository())->get(['parent_id' => (int)$parent_id], ['id', 'guard_name'], [], ['sub_area_count' => 'desc'])) {
            //循环子集
            foreach ($sub_areas as $k => $area) {
                //获取子集
                if ($subs = $this->getAreasTree((int)$area['id'])) {
                    //设置子集
                    $area['subs'] = $subs;
                }
                //设置数据
                $data[(int)$area['id']] = $area;
                //释放内存
                unset($sub_areas[$k]);
            }
        }
        //返回结构
        return $data;
    }
}
